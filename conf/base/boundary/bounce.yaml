# @package _global_
#
# Hydra configuration for BounceBoundary policy implementing elastic collision behavior.
#
# This configuration enables realistic physics simulation with agent reflection off domain
# boundaries, supporting configurable energy conservation and collision elasticity.
# Critical for studies of boundary interaction effects on navigation strategies and
# exploring how collision dynamics influence agent behavior patterns.
#
# Key Features:
# - Elastic collision physics with configurable restitution coefficient
# - Energy dissipation modeling for realistic material property simulation  
# - Vectorized multi-agent boundary collision handling
# - Environment variable overrides for runtime parameter adjustment
# - Validation constraints ensuring physically meaningful parameter ranges
#
# Physics Model:
# - Velocity reflection: v_new = -v_old * elasticity * (1 - energy_loss)
# - Position correction: Agents are reflected back into valid domain
# - Corner collision handling: Independent x/y velocity reflection
# - Momentum conservation: Tangential velocity components preserved
#
# Performance Characteristics:
# - apply_policy(): <0.5ms for 100 agents with vectorized operations
# - check_violations(): <0.1ms for boundary detection across all agents
# - Memory efficiency: <1KB for collision state management
#
# Research Applications:
# - Boundary interaction studies with realistic collision physics
# - Navigation strategy analysis under different material properties
# - Multi-agent collision dynamics and emergence patterns
# - Comparison with other boundary policies (terminate, wrap, clip)
#
# Configuration Examples:
#   Perfect elastic collisions (no energy loss):
#     elasticity: 1.0, energy_loss: 0.0
#   
#   Realistic material behavior (some energy dissipation):
#     elasticity: 0.8, energy_loss: 0.1
#   
#   High damping environment (significant energy loss):
#     elasticity: 0.6, energy_loss: 0.3

# Target class for Hydra instantiation - BounceBoundary implementation
_target_: plume_nav_sim.core.boundaries.BounceBoundary

# Domain boundary configuration defining the valid navigation region
# Agents colliding with these boundaries will undergo elastic reflection
domain_bounds: 
  # Domain width and height in simulation units
  # Can be overridden via environment variables or command line
  - ${oc.env:BOUNDARY_DOMAIN_WIDTH,100.0}   # Domain width (x-axis extent)
  - ${oc.env:BOUNDARY_DOMAIN_HEIGHT,100.0}  # Domain height (y-axis extent)

# Coefficient of restitution controlling collision elasticity [0.0, 1.0]
# Higher values = more elastic collisions with less energy loss
# Lower values = more inelastic collisions with greater energy dissipation
elasticity: ${oc.env:BOUNDARY_BOUNCE_RESTITUTION,0.8}

# Additional energy loss factor beyond elasticity effects [0.0, 1.0] 
# Models additional energy dissipation due to:
# - Surface friction and material damping
# - Non-ideal collision mechanics  
# - Environmental energy absorption
# Total energy retention = elasticity * (1 - energy_loss)
energy_loss: ${oc.env:BOUNDARY_BOUNCE_ENERGY_LOSS,0.05}

# Coordinate system configuration
# Controls whether agents can have negative position coordinates
# Set to false for standard [0, domain_bounds] coordinate system
# Set to true for centered coordinate system around origin
allow_negative_coords: ${oc.env:BOUNDARY_ALLOW_NEGATIVE_COORDS,false}

# Advanced collision parameters for fine-tuning physics behavior
collision_config:
  # Minimum collision detection threshold to prevent numerical instabilities
  # Agents within this distance of boundary are considered in collision
  collision_threshold: ${oc.env:BOUNDARY_COLLISION_THRESHOLD,1e-6}
  
  # Maximum reflection angle in radians to prevent excessive trajectory changes
  # Helps maintain realistic collision dynamics for shallow-angle impacts  
  max_reflection_angle: ${oc.env:BOUNDARY_MAX_REFLECTION_ANGLE,3.14159}
  
  # Velocity damping applied during collision resolution [0.0, 1.0]
  # Additional velocity reduction beyond elasticity and energy_loss
  velocity_damping: ${oc.env:BOUNDARY_VELOCITY_DAMPING,1.0}

# Performance optimization settings
performance:
  # Enable vectorized collision detection for multi-agent scenarios
  # Significantly improves performance with 10+ agents
  use_vectorized_operations: ${oc.env:BOUNDARY_USE_VECTORIZED,true}
  
  # Collision detection optimization level [1-3]
  # 1: Basic checks, 2: Optimized math, 3: Maximum optimization
  optimization_level: ${oc.env:BOUNDARY_OPTIMIZATION_LEVEL,2}
  
  # Memory management for collision state tracking
  # Controls how much collision history is retained for analysis
  max_collision_history: ${oc.env:BOUNDARY_MAX_COLLISION_HISTORY,100}

# Validation constraints ensuring physically meaningful parameters
# These constraints are enforced at configuration load time
constraints:
  elasticity:
    min: 0.0          # Perfectly inelastic collision (complete energy loss)
    max: 1.0          # Perfectly elastic collision (no energy loss)
    description: "Coefficient of restitution must be between 0.0 and 1.0"
    
  energy_loss:
    min: 0.0          # No additional energy dissipation beyond elasticity
    max: 1.0          # Complete energy absorption (agent stops on contact)
    description: "Energy loss factor must be between 0.0 and 1.0"
    
  domain_bounds:
    min_width: 1.0    # Minimum domain width to prevent degenerate cases
    min_height: 1.0   # Minimum domain height to prevent degenerate cases
    max_aspect_ratio: 100.0  # Maximum width/height ratio for numerical stability
    description: "Domain bounds must be positive with reasonable aspect ratio"

# Debug and analysis configuration
debug:
  # Enable collision event logging for detailed analysis
  log_collisions: ${oc.env:BOUNDARY_LOG_COLLISIONS,false}
  
  # Track collision statistics for performance monitoring
  track_collision_stats: ${oc.env:BOUNDARY_TRACK_STATS,false}
  
  # Collision visualization settings for debugging
  visualize_collisions: ${oc.env:BOUNDARY_VISUALIZE_COLLISIONS,false}
  
  # Detailed collision logging level [0=none, 1=basic, 2=detailed, 3=verbose]
  collision_log_level: ${oc.env:BOUNDARY_COLLISION_LOG_LEVEL,1}

# Integration settings for environment interaction
integration:
  # Status returned to environment when collisions occur but episode continues
  # Bounce policy allows episodes to continue with corrected agent positions
  termination_status: "continue"
  
  # Whether to report collision events in environment observations
  # Enables downstream analysis of collision frequency and patterns
  report_collision_events: ${oc.env:BOUNDARY_REPORT_COLLISIONS,true}
  
  # Hook priority for boundary policy application in simulation pipeline
  # Lower values = higher priority, applied before other position modifiers
  policy_priority: ${oc.env:BOUNDARY_POLICY_PRIORITY,10}

# Environment variable documentation for runtime parameter overrides
# 
# Core Physics Parameters:
#   BOUNDARY_BOUNCE_RESTITUTION     - Coefficient of restitution [0.0-1.0]
#   BOUNDARY_BOUNCE_ENERGY_LOSS     - Additional energy loss factor [0.0-1.0] 
#   BOUNDARY_DOMAIN_WIDTH           - Domain width in simulation units
#   BOUNDARY_DOMAIN_HEIGHT          - Domain height in simulation units
#   BOUNDARY_ALLOW_NEGATIVE_COORDS  - Allow negative coordinates [true/false]
#
# Advanced Collision Control:
#   BOUNDARY_COLLISION_THRESHOLD    - Collision detection threshold
#   BOUNDARY_MAX_REFLECTION_ANGLE   - Maximum reflection angle (radians)
#   BOUNDARY_VELOCITY_DAMPING       - Additional velocity damping [0.0-1.0]
#
# Performance Tuning:
#   BOUNDARY_USE_VECTORIZED         - Enable vectorized operations [true/false]
#   BOUNDARY_OPTIMIZATION_LEVEL     - Optimization level [1-3]
#   BOUNDARY_MAX_COLLISION_HISTORY  - Collision history buffer size
#
# Debug and Analysis:
#   BOUNDARY_LOG_COLLISIONS         - Enable collision logging [true/false]
#   BOUNDARY_TRACK_STATS            - Track collision statistics [true/false]
#   BOUNDARY_VISUALIZE_COLLISIONS   - Enable collision visualization [true/false]
#   BOUNDARY_COLLISION_LOG_LEVEL    - Logging detail level [0-3]
#
# Integration Control:
#   BOUNDARY_REPORT_COLLISIONS      - Include collisions in observations [true/false]
#   BOUNDARY_POLICY_PRIORITY        - Policy application priority [integer]
#
# Usage Examples:
#   export BOUNDARY_BOUNCE_RESTITUTION=0.9     # High elasticity
#   export BOUNDARY_BOUNCE_ENERGY_LOSS=0.02    # Minimal energy loss
#   export BOUNDARY_DOMAIN_WIDTH=200           # Larger domain width
#   export BOUNDARY_LOG_COLLISIONS=true        # Enable collision logging