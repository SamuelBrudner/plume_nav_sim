# @package _global_
# Hydra configuration for NullRecorder (none) backend
# Provides zero-overhead disabled recording for maximum simulation performance
# Implements RecorderProtocol interface with no-op operations

defaults:
  - override /hydra/launcher: basic

# Target class implementing RecorderProtocol interface
_target_: plume_nav_sim.recording.backends.NullRecorder

# Core recording configuration
enabled: false                    # Recording completely disabled for zero overhead
record_full: false               # No full trajectory recording 
record_summary: false            # No summary data collection
backend_name: "none"             # Identifier for NullRecorder backend

# Performance optimization settings
buffer_size: 0                   # No buffering required for null operations
async_io: false                  # No I/O operations to perform
compression: null                # No compression needed
batch_size: 1                    # Single-step no-op processing

# Debug and monitoring configuration
debug_mode: ${oc.env:PLUME_RECORDER_DEBUG,false}     # Optional debugging mode with method call counting
performance_monitoring: ${oc.env:PLUME_RECORDER_PERF_MON,false}  # Performance verification hooks
call_count_tracking: ${debug_mode}  # Track method calls for performance verification
timing_validation: ${performance_monitoring}  # Validate <1ms overhead claims

# Validation and error handling
validate_inputs: false           # Skip input validation for maximum performance
strict_mode: false              # Lenient error handling for graceful degradation
fail_silently: true             # No exceptions thrown from recording operations
graceful_degradation: true      # Enable fallback mode when other backends fail

# Output configuration (all disabled)
output_directory: null           # No output directory needed
file_prefix: null               # No file prefix required
metadata_recording: false       # No metadata collection
schema_validation: false        # No schema validation overhead

# Memory management
memory_limit: 0                  # No memory allocation for recording
gc_frequency: 0                 # No garbage collection management needed
buffer_cleanup: false          # No buffer cleanup required

# Integration settings
hook_integration: ${performance_monitoring}  # Enable hooks only for performance monitoring
recorder_id: "null_recorder"    # Unique identifier for debugging
session_tracking: ${debug_mode}  # Track recording sessions for debugging

# Environment variable overrides for deployment flexibility
_recursive_: false              # Prevent recursive resolution for performance
_convert_: all                  # Enable automatic type conversion from environment variables

# Advanced configuration for testing and verification
test_mode: ${oc.env:PLUME_TEST_MODE,false}  # Enable additional verification in test environments
benchmark_mode: ${oc.env:PLUME_BENCHMARK_MODE,false}  # Enable benchmark-specific optimizations
verification_hooks: ${test_mode}  # Enable verification hooks in test mode

# Fallback configuration
fallback_enabled: true          # Always available as fallback option
priority: 1                     # Lowest priority backend (fallback only)
auto_fallback: true            # Automatically activate on other backend failures

# Performance targets and verification
target_overhead_ms: 0.001      # Target: <1ms per 1000 steps (0.001ms per step)
max_overhead_ms: 0.01          # Maximum acceptable overhead per step
performance_check_interval: ${oc.env:PLUME_PERF_CHECK_INTERVAL,1000}  # Steps between performance checks

# Compatibility settings
protocol_version: "1.0"        # RecorderProtocol version compatibility
api_compatibility: "full"      # Full RecorderProtocol API compatibility
legacy_support: false          # No legacy compatibility needed for null operations