[build-system]
requires = ["poetry-core>=1.8.0", "setuptools>=42", "wheel"]
build-backend = "poetry.core.masonry.api"

[project]
name = "plume_nav_sim"
version = "1.0.0"
description = "A general-purpose, extensible simulation toolkit for odor plume navigation research with protocol-based architecture and zero-code extensibility"
readme = "README.md"
authors = [
    {name = "Samuel Brudner", email = "example@example.com"}
]
license = {text = "MIT"}
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10", 
    "Programming Language :: Python :: 3.11",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Intended Audience :: Education",
    "Topic :: Scientific/Engineering",
    "Environment :: Console",
    "Framework :: Robot Framework :: Library",
]
requires-python = ">=3.10,<4.0"
dependencies = [
    "numpy>=1.26.0",
    "gymnasium==0.29.*",
    "matplotlib>=3.7.0",
    "opencv-python>=4.8.0",
    "pyyaml>=6.0",
    "scipy>=1.11.0",
    "hydra-core==1.3.*",
    "omegaconf>=2.3.0",
    "click>=8.2.1",
    "python-dotenv>=1.1.0",
    "sqlalchemy>=2.0.41",
    "typing-extensions>=4.13.2",
    "pydantic>=2.5.0",
    "loguru>=0.7.0",
    "psutil>=5.9.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-benchmark>=4.0.0",
    "pre-commit>=3.6.0",
    "black>=23.12.0",
    "isort>=5.13.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    # RL-specific testing and validation tools for Gymnasium API compliance
    "gymnasium[classic-control]==0.29.*",
    "stable-baselines3[extra]>=2.0.0",
]
docs = [
    "sphinx>=8.0.0",
    "sphinx-autodoc-typehints>=1.24.0",
    "sphinx-rtd-theme>=2.0.0",
]
viz = [
    "plotly>=5.17.0",
    "seaborn>=0.12.0",
]
rl = [
    # Core RL dependencies for Gymnasium API compatibility
    "gymnasium==0.29.*",
    "stable-baselines3>=2.0.0",
    "shimmy>=1.0.0",
]
performance = [
    # High-performance computing dependencies for turbulent plume modeling
    "numba>=0.59.0",
]
recording = [
    # Recording backend dependencies for data persistence and analysis
    "pandas>=1.5.0",
    "pyarrow>=10.0.0", 
    "h5py>=3.0.0",
    # sqlite3 is included in Python standard library
]
debug = [
    # Debug GUI interface dependencies for interactive debugging
    # "PySide6>=6.0.0",  # Temporarily disabled due to Python 3.12 compatibility issue
    "streamlit>=1.0.0",
]
analysis = [
    # Enhanced analysis and statistics dependencies
    "scipy>=1.11.0",
    "pandas>=1.5.0",
]

[project.scripts]
plume-nav-sim = "plume_nav_sim.cli.main:main"
# RL training console script entry points for enhanced training capabilities
plume-nav-train = "plume_nav_sim.cli.main:train_main"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]
include = ["plume_nav_sim*"]

[tool.poetry]
name = "plume_nav_sim"
version = "1.0.0"
description = "A general-purpose, extensible simulation toolkit for odor plume navigation research with protocol-based architecture and zero-code extensibility"
authors = ["Samuel Brudner <example@example.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/organization/plume_nav_sim"
repository = "https://github.com/organization/plume_nav_sim"
documentation = "https://plume_nav_sim.readthedocs.io"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Intended Audience :: Education",
    "Topic :: Scientific/Engineering",
    "Environment :: Console",
    "Framework :: Robot Framework :: Library",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
packages = [{include = "plume_nav_sim", from = "src"}]

[tool.poetry.dependencies]
python = ">=3.10,<4.0"
numpy = ">=1.26.0"
gymnasium = "==0.29.*"
matplotlib = ">=3.7.0"
opencv-python = ">=4.8.0"
pyyaml = ">=6.0"
scipy = ">=1.11.0"
hydra-core = "==1.3.*"
omegaconf = ">=2.3.0"
click = ">=8.2.1"
python-dotenv = ">=1.1.0"
sqlalchemy = ">=2.0.41"
typing-extensions = ">=4.13.2"
pydantic = ">=2.5.0"
loguru = ">=0.7.0"
psutil = ">=5.9.0"

[tool.poetry.group.dev.dependencies]
pytest = ">=7.4.0"
pytest-cov = ">=4.1.0"
pytest-benchmark = ">=4.0.0"
pre-commit = ">=3.6.0"
black = ">=23.12.0"
isort = ">=5.13.0"
ruff = ">=0.1.0"
mypy = ">=1.5.0"
# RL-specific testing and validation tools for Gymnasium API compliance
gymnasium = {version = "==0.29.*", extras = ["classic-control"]}
stable-baselines3 = {version = ">=2.0.0", extras = ["extra"]}
hypothesis = "^6.136.6"

[tool.poetry.group.docs.dependencies]
sphinx = ">=8.0.0"
sphinx-autodoc-typehints = ">=1.24.0"
sphinx-rtd-theme = ">=2.0.0"

[tool.poetry.group.viz.dependencies]
plotly = ">=5.17.0"
seaborn = ">=0.12.0"

[tool.poetry.group.rl.dependencies]
# Core RL dependencies for Gymnasium API compatibility per Section 0.2.4
gymnasium = "==0.29.*"
stable-baselines3 = ">=2.0.0"
shimmy = ">=1.0.0"

[tool.poetry.group.performance.dependencies]
# High-performance computing dependencies for turbulent plume modeling
numba = ">=0.59.0"

[tool.poetry.group.recording.dependencies]
# Recording backend dependencies for data persistence and analysis
pandas = ">=1.5.0"
pyarrow = ">=10.0.0"
h5py = ">=3.0.0"
# sqlite3 is included in Python standard library

[tool.poetry.group.debug.dependencies]
# Debug GUI interface dependencies for interactive debugging
# PySide6 = ">=6.0.0"  # Temporarily disabled due to Python 3.12 compatibility issue
streamlit = ">=1.0.0"

[tool.poetry.group.analysis.dependencies]
# Enhanced analysis and statistics dependencies
scipy = ">=1.11.0"
pandas = ">=1.5.0"

[tool.poetry.scripts]
plume-nav-sim = "plume_nav_sim.cli.main:main"
# RL training console script entry points for enhanced training capabilities
plume-nav-train = "plume_nav_sim.cli.main:train_main"

[tool.poetry.extras]
dev = ["pytest", "pytest-cov", "pytest-benchmark", "pre-commit", "black", "isort", "ruff", "mypy", "gymnasium", "stable-baselines3"]
docs = ["sphinx", "sphinx-autodoc-typehints", "sphinx-rtd-theme"]
viz = ["plotly", "seaborn"]
rl = ["gymnasium", "stable-baselines3", "shimmy"]
performance = ["numba"]
recording = ["pandas", "pyarrow", "h5py"]
debug = ["streamlit"]
analysis = ["scipy", "pandas"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "--cov=plume_nav_sim --cov-report=term-missing --cov-report=xml --cov-report=html"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "rl: marks tests as reinforcement learning tests",
    "gymnasium: marks tests as Gymnasium API compliance tests",
]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
plugins = ["pydantic.mypy"]

[[tool.mypy.overrides]]
module = [
    "matplotlib.*",
    "numpy.*",
    "plotly.*",
    "seaborn.*",
    "cv2.*",
    "opencv.*",
    "loguru.*",
    "psutil.*",
    "stable_baselines3.*",
    "shimmy.*",
    "numba.*",
    "pandas.*",
    "pyarrow.*",
    "h5py.*",
    "PySide6.*",
    "streamlit.*",
    "omegaconf.*",
]
ignore_missing_imports = true

[tool.black]
line-length = 88
target-version = ["py310", "py311"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["plume_nav_sim"]
known_third_party = [
    "numpy",
    "matplotlib",
    "cv2",
    "pyyaml",
    "scipy",
    "hydra",
    "omegaconf",
    "click",
    "dotenv",
    "sqlalchemy",
    "pydantic",
    "loguru",
    "psutil",
    "pytest",
    "pytest-benchmark", 
    "gymnasium",
    "stable_baselines3",
    "shimmy",
    "numba",
    "pandas",
    "pyarrow",
    "h5py",
    "PySide6",
    "streamlit",
]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
default_section = "THIRDPARTY"
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
include_trailing_comma = true

[tool.coverage.run]
source = ["src/plume_nav_sim"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/site-packages/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]