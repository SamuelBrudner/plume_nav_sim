[pytest]
markers =
    performance: performance tests
    slow: slow tests
    unit: unit tests
    inheritance: class inheritance behavior
    integration: integration tests
    error_handling: error handling scenarios
    resource_management: resource usage and cleanup
    platform: platform-specific behavior
    headless: headless rendering scenarios
    visual: visual inspection tests
    scenarios: scenario-based tests
    edge_case: edge case tests
    boundary: boundary condition coverage
    cascade: cascade-specific diagnostics
    concurrent: concurrent execution checks
    concurrency: concurrency stress scenarios
    lifecycle: environment lifecycle coverage
    mathematical: analytical and numerical validation
    memory: memory usage verification
    memory_stress: sustained memory pressure evaluations
    performance_stress: intensive performance stress tests
    recovery: recovery-path validation
    regression: regression test suite
    rendering: rendering pipeline checks
    reproducibility: reproducibility guarantees
    scalability: scalability and throughput analysis
    security: security and hardening tests
    stress: general stress scenarios
    timeout: timing and latency constraints
    validation: validation rule enforcement
