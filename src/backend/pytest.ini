[tool:pytest]
minversion = 8.0
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test* *Test
python_functions = test_*
addopts = -ra --strict-markers --tb=short --durations=10 --durations-min=1.0 -x --maxfail=5 --disable-warnings
markers =
    unit: marks unit tests for individual component validation
    integration: marks integration tests for cross-component validation
    performance: marks performance tests with timing and resource monitoring
    slow: marks slow-running tests requiring extended execution time
    reproducibility: marks reproducibility tests with deterministic seeding
    edge_case: marks edge case tests with boundary conditions
    memory: marks memory usage tests with leak detection
    scalability: marks scalability tests across different grid sizes
    regression: marks regression tests for performance trend analysis
    concurrent: marks concurrent execution tests with thread safety
    benchmark: marks benchmark tests with statistical analysis
    rendering: marks rendering system tests with visualization validation
    api_compliance: marks Gymnasium API compliance tests
    functional: marks functional requirement validation tests
    stress: marks stress tests with extreme parameter validation
    flaky: marks potentially unstable tests requiring retry logic
    gpu: marks tests requiring GPU acceleration (skipped if unavailable)
    network: marks tests requiring network connectivity
    timeout: marks tests with extended execution time requirements
    parametrized: marks parametrized tests with multiple input combinations
filterwarnings =
    error
    ignore::UserWarning:matplotlib.*
    ignore::DeprecationWarning:gymnasium.*
    ignore::PendingDeprecationWarning
    ignore::RuntimeWarning:numpy.*
    ignore::FutureWarning:gymnasium.spaces.*
    ignore::ResourceWarning
    ignore:.*backend.*:UserWarning:matplotlib.*
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S
log_file = tests/logs/pytest.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(filename)s:%(lineno)d %(funcName)s(): %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S
junit_family = xunit2
junit_suite_name = plume_nav_sim_test_suite
junit_logging = all
junit_log_passing_tests = true
cache_dir = tests/.pytest_cache
norecursedirs = *.egg .eggs dist build docs .tox .git __pycache__ .pytest_cache node_modules .mypy_cache .coverage htmlcov

[coverage:run]
source = plume_nav_sim
branch = True
omit = 
    */tests/*
    */test_*
    setup.py
    */conftest.py
    */__pycache__/*
    */.*
    */venv/*
    */virtualenv/*
    */build/*
    */dist/*
    */.pytest_cache/*
    */.coverage
